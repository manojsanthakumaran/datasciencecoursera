download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="getdata_data_ss06hid.csv", method="curl")
ls ()
ls
list.files()
amComSurData <- read.csv("getdata_data_ss06hid.csv")
head(amComSurData)
dim(amComSurData)
names(amComSurData)
head(select(amComSurData, ACR:AGS))
library(dplyr)
install.packages("dplyr")
library(dplyr)
head(select(amComSurData, ACR:AGS))
tail(select(amComSurData, ACR:AGS))
filter1Data <- filter(amComSurData, ACR > 10 & AGS > 9)
head(filter1Data)
filter1Data <- filter(amComSurData, ACR = 3 & AGS = 10)
filter1Data <- filter(amComSurData, ACR == 3 & AGS == 10)
head(filter1Data)
filter1Data <- filter(amComSurData, ACR == 3 & AGS == 6)
head(filter1Data)
dim(filter1Data)
nFilterData <- mutate(amComSurData, agricultureLogical=filter(ACR == 3 & AGS == 6), labels=c("Yes","No"))
amComSurData %>% mutate(agricultureLogical=filter(ACR == 3 & AGS == 6), labels=c("Yes","No"))
amComSurData %>% mutate(agricultureLogical=ifelse(ACR == 3 & AGS == 6, TRUE, FALSE))
dim(amComSurData)
names(amComSurData)
aFilterData <- mutate(amComSurData, agricultureLogical=ifelse(ACR == 3 & AGS == 6, TRUE, FALSE))
dim(aFilterData)
names(aFilterData)
head(select(aFilterData, ACR:AGS:agricultureLogical))
?which
which(agricultureLogical)
which(aFilterData,agricultureLogical)
which(aFilterData$agricultureLogical)
picData <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native=TRUE)
install.packages("jpeg")
library(jpeg)
picData <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native=TRUE)
?readJPEG
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="getdata_jeff.jpg", method="curl")
picData <- readJPEG("getdata_jeff.jpg",native=TRUE)
quantile(picData,probs=c(30,80))
quantile(picData,probs=c(.3,.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="getdata_data_GDP.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="getdata_data_EDSTATS_Country.csv", method="curl")
?join
theData1 <- read.csv("getdata_data_GDP.csv")
theData2 <- read.csv("getdata_data_EDSTATS_Country.csv")
dim(theData1)
dim(theData2)
names(theData1)
names(theData2)
head(theData1)
head(theData2)
joinedData <- join(theData1,theData2,by = c("CountryCode","X"))
?merge
joinedData <- merge(theData1,theData2,by = c("CountryCode","X"))
joinedData <- merge(theData1,theData2,by.x="CountryCode",by.y="X")
names(theData1)
joinedData <- merge(theData1,theData2,by.x="X",by.y="CountryCode")
dim(joinedData)
joinedData <- merge(theData1,theData2,by.x="X",by.y="CountryCode",incomparables=NA)
dim(joinedData)
names(theData1)
dim(theData1)
subSetData1 <- subset(theData1, X=='')
dim(subSetData1)
dim(theData2)
subSetData2 <- subset(theData2, CountryCode=='')
dim(subSetData2)
subSetData2 <- subset(theData2, CountryCode!='')
dim(subSetData2)
subSetData1 <- subset(theData1, X!='')
dim(subSetData1)
joinedData <- merge(subSetData1,subSetData2,by.x="X",by.y="CountryCode")
dim(joinedData)
uniqSubSetData1 <- unique(subSetData1)
dim(uniqSubSetData1)
uniqSubSetData2 <- unique(subSetData2)
dim(uniqSubSetData2)
joinedData <- merge(uniqSubSetData1,uniqSubSetData2,by.x="X",by.y="CountryCode", all=TRUE)
dim(joinedData)
joinedData <- merge(uniqSubSetData1,uniqSubSetData2,by.x="X",by.y="CountryCode")
dim(joinedData)
joinedData <- merge(uniqSubSetData2,uniqSubSetData1,by.x="CountryCode",by.y="X")
dim(joinedData)
joinedData <- arrange(joinedData,X.1)
head(joinedData)
head(select(joinedData,CountryCode:Long.Name))
tail(select(joinedData,CountryCode:Long.Name))
joinedData <- merge(uniqSubSetData1,uniqSubSetData2,by.x="X",by.y="CountryCode")
joinedData <- arrange(joinedData,X.1)
tail(select(joinedData,CountryCode:Long.Name))
tail(select(joinedData,X:X.1))
names(joinedData)
head(select(joinedData,X:X.1))
joinedData <- arrange(joinedData,Gross.domestic.product.2012)
tail(select(joinedData,X:X.1))
head(select(joinedData,X:X.1))
theData1 <- read.csv("getdata_data_GDP.csv")
theData2 <- read.csv("getdata_data_EDSTATS_Country.csv")
dim(theData1)
head(theData1)
theData1 <- subset(theData1,X!='')
dim(theData1)
head(theData1)
tail(theData1)
theData1 <- subset(theData1,Gross.domestic.product.2012!='')
dim(theData1)
dim(theData2)
head(theData2)
theData2 <- subset(theData1,CountryCode!='')
theData2 <- subset(theData2,CountryCode!='')
dim(theData2)
theData2 <- unique(theData2)
dim(theData2)
mergedData <- merge(theData1, theData2, by.x="X", by.y="CountryCode")
dim(mergedData)
head(mergedData)
tail(mergedData)
head(select(mergedData,X:Gross.domestic.product.2012:CountryCode))
head(select(mergedData,X:Gross.domestic.product.2012))
tail(select(mergedData,X:Gross.domestic.product.2012))
sortedData <- arrange(mergedData,Gross.domestic.product.2012)
dim(sortedData)
head(select(sortedData,X:Gross.domestic.product.2012))
head(select(sortedData,X:Gross.domestic.product.2012:Rank))
sortedData2 <- mutate(sortedData, Rank=as.numeric(Gross.domestic.product.2012))
dim(sortedData2)
head(select(sortedData2,X:Gross.domestic.product.2012:Rank))
head(select(sortedData2,X:Rank))
head(select(sortedData2,X:Rank),1)
sortedData2 <- mutate(sortedData, Rank=as.numeric(as.character(Gross.domestic.product.2012)))
head(select(sortedData2,X:Rank),1)
head(select(sortedData2,X:Gross.domestic.product.2012:Rank))
head(select(sortedData2,X:Rank))
sortedData <- arrange(mergedData,as.numeric(as.character(Gross.domestic.product.2012)))
dim(sortedData)
head(sortedData)
sortedData <- arrange(mergedData,as.numeric(as.character(Gross.domestic.product.2012)),desc)
sortedData <- arrange(mergedData,desc(as.numeric(as.character(Gross.domestic.product.2012))))
head(sortedData)
tail(sortedData)
head(select(sortedData,X:Gross.domestic.product.2012))
head(select(sortedData,X:Gross.domestic.product.2012),14)
head(select(sortedData,Long.Name:Gross.domestic.product.2012),14)
head(select(sortedData,X:Income.Group),14)
incomeData1 <- subset(sortedData,Income.Group=='High income: OECD')
dim(incomeData1)
rowMeans(incomeData1$Gross.domestic.product.2012)
rowMeans(incomeData1[,Gross.domestic.product.2012])
?apply
apply(incomeData1,2,mean)
apply(incomeData1,incomeData$Gross.domestic.product.2012,mean)
apply(incomeData1,incomeData1$Gross.domestic.product.2012,mean)
unique(incomeData1$Gross.domestic.product.2012)
theData1 <- read.csv("getdata_data_GDP.csv")
theData2 <- read.csv("getdata_data_EDSTATS_Country.csv")
dim(theData1)
str(theData1)
theData1 <- subset(theData1,X!='')
dim(theData1)
theData1 <- subset(theData1,Gross.domestic.product.2012!='')
dim(theData1)
theData1 <- mutate(theData1, Rank=as.numeric(as.character(Gross.domestic.product.2012)))
str(theData1)
theData1 <- subset(theData1,Rank!=NA)
dim(theData1)
theData1 <- read.csv("getdata_data_GDP.csv")
theData1 <- subset(theData1,X!='')
theData1 <- subset(theData1,Gross.domestic.product.2012!='')
theData1 <- mutate(theData1, Rank=as.numeric(as.character(Gross.domestic.product.2012)))
head(theData1)
tail(theData1)
dim(theData2)
str(theData2)
theData2 <- subset(theData2,CountryCode!='')
dim(theData2)
mergedData <- merge(theData1,theData2,by.x="X", by.y="CountryCode")
dim(mergedData)
str(mergedData)
sortedData <- arrange(mergedData,Rank)
sortedData <- arrange(mergedData,desc(Rank))
head(sortedData)
tail(sortedData)
subSetData1 <- subset(sortedData,Income.Group=='High income: OECD')
dim(subSetData1)
colMeans(subSetData1,na.rm=TRUE,Rank)
colMeans(subSetData1$Rank,na.rm=TRUE)
subSetData1$Rank
mean(subSetData1$Rank)
subSetData2 <- subset(sortedData,Income.Group=='High income: nonOECD')
mean(subSetData2$Rank)
quantileData <- with(sortedData, cut(Rank, breaks=quantile(0,1,by=.2), include.lowest=TRUE))
quantileData <- with(sortedData, cut(value, breaks=quantile(0,1,by=.2), include.lowest=TRUE))
?cut
quantileData <- with(sortedData, cut(sortedData$Rank, breaks=quantile(0,1,by=.2), include.lowest=TRUE))
?quantile
quantileData <- with(sortedData, cut(sortedData$Income.Group, breaks=quantile(sortedData$Rank,probs=seq(0,.25,.5,.75,1)), include.lowest=TRUE))
quantileData <- with(sortedData, cut(sortedData$Rank, breaks=quantile(sortedData$Rank,probs=seq(0,.25,.5,.75,1)), include.lowest=TRUE))
quantileData <- with(sortedData, cut(sortedData$Rank, breaks=quantile(sortedData$Rank,probs=seq(0,1,.25)), include.lowest=TRUE))
headquantileData
head(quantileData)
quantileData <- with(sortedData, cut(sortedData$Rank, breaks=quantile(sortedData$Rank,probs=seq(0,1,.2)), include.lowest=TRUE))
head(quantileData)
